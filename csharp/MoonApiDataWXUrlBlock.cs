// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using MoonApiDemo;
//
//    var moonApiDataWxUrlBlock = MoonApiDataWxUrlBlock.FromJson(jsonString);

namespace MoonApiDemo
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class MoonApiDataWxUrlBlock
    {
        [JsonProperty("status")]
        public string Status { get; set; }

        [JsonProperty("data")]
        public string Data { get; set; }

        [JsonProperty("time")]
        public long Time { get; set; }

        [JsonProperty("code")]
        public string Code { get; set; }

        [JsonProperty("message")]
        public string Message { get; set; }
    }

    public partial class MoonApiDataWxUrlBlock
    {
        public static MoonApiDataWxUrlBlock FromJson(string json) => JsonConvert.DeserializeObject<MoonApiDataWxUrlBlock>(json, MoonApiDemo.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this MoonApiDataWxUrlBlock self) => JsonConvert.SerializeObject(self, MoonApiDemo.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
